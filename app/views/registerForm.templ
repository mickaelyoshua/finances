package views

type RegisterFormData struct {
	Values map[string]string
	Errors map[string]string
}

templ RegisterForm(data RegisterFormData) {
	<form class="space-y-4 md:space-y-6" hx-post="/register" hx-swap="outerHTML">
		<div>
			<label for="username" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Your username</label>
			<input type="text" name="username" id="username" value={ data.Values["username"] } class="bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="name" required=""/>
			if data.Errors["username"] != "" {
				<p class="text-sm text-red-500">{ data.Errors["username"] }</p>
			}
		</div>
		<div>
			<label for="email" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Your email</label>
			<input type="email" name="email" id="email" value={ data.Values["email"] } class="bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="name@company.com" required=""/>
			if data.Errors["email"] != "" {
				<p class="text-sm text-red-500">{ data.Errors["email"] }</p>
			}
		</div>
		<div>
			<label for="password" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Password</label>
			<input type="password" name="password" id="password" placeholder="••••••••" class="bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-.white dark:focus:ring-blue-500 dark:focus:border-blue-500" required=""/>
			if data.Errors["password"] != "" {
				<p class="text-sm text-red-500">{ data.Errors["password"] }</p>
			}
		</div>
		<div>
			<label for="confirm-password" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Confirm password</label>
			<input type="password" name="confirm-password" id="confirm-password" placeholder="••••••••" class="bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" required=""/>
			if data.Errors["confirmPassword"] != "" {
				<p class="text-sm text-red-500">{ data.Errors["confirmPassword"] }</p>
			}
		</div>
		<button type="submit" class="w-full text-white bg-primary-600 hover:bg-primary-700 focus:ring-4 focus:outline-none focus:ring-primary-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-primary-600 dark:hover:bg-primary-700 dark:focus:ring-primary-800">Create an account</button>
		<p class="text-sm font-light text-gray-500 dark:text-gray-400">
			Already have an account? <a href="/login" class="font-medium text-primary-600 hover:underline dark:text-primary-500">Login here</a>
		</p>
	</form>
}